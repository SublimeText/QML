<?xml version="1.0" encoding="UTF-8"?>
<plist version="1.0">
<dict>
    <key>scope</key>
    <string>source.qml - (meta.block.js | meta.switch.js)</string>
    <key>settings</key>
    <dict>
        <key>decreaseIndentPattern</key>
        <string><![CDATA[(?x)
            # line beginning with whitespace or block comments
            ^ (.*\*/)? \s*
            # dedent closing braces
            \}
        ]]></string>

        <key>increaseIndentPattern</key>
        <string><![CDATA[(?x)
            # line beginning with whitespace or block comments
            ^ (.*\*/)? \s*
            # indent after opening braces (may be followed by whitespace or comments)
            # but exclude lines such as `extern "C" {`
            .* \{ (?: \s* /\*.*\*/ )* \s* (?: //.* )? $
        ]]></string>

        <key>bracketIndentNextLinePattern</key>
        <string><![CDATA[(?x)
            # line beginning with whitespace or block comments
            ^ (.*\*/)? (?<comment_or_whitespace> (?: \s* (?<block_comment> /\*.*\*/ ) )* \s* )
            (?:
            # indent after:
            # - `else`
              else
            # indent after:
            # - `else if (...)`
            # - `if (...)`
            # - `while (...)`
            | (?: (?: else \g<comment_or_whitespace> )? if | while )
              \b
              # before a ;
              [^;]*
            # indent after `for`
            | for\b .*
            )
            $
        ]]></string>

        <key>unIndentedLinePattern</key>
        <string><![CDATA[(?x)
            ^\s*
            (?:
            # standalone begin or end of block comments
            #   ST doesn't apply `Indentation Rules - Comments`, because
            #   comment scope doesn't cover the whole line. So they need
            #   to be excluded from indentation engine here.
              // | /\*(?!.*\*/) | .*\*/
            )
        ]]></string>

        <key>indentSquareBrackets</key>
        <true/>
    </dict>
</dict>
</plist>
